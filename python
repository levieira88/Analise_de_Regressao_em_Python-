#python.py

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score

MKT = pd.read_excel("/content/MKT.xlsx")
MKT.head()

MKT.dtypes

MKT.info()

MKT[["youtube", "facebook", "newspaper", "sales"]].describe()

MKT_total = pd.DataFrame({'Tipo': MKT.columns, 'Total': MKT.sum()})
MKT_total.reset_index(inplace=True)
MKT_total = MKT_total[['Tipo', 'Total']]
MKT_total

# **ETAPA 1 **- Com base nas informações apresentadas acima, temos uma tabela composta de 4 colunas e 171 linhas não-nulas. Os números estão em decimais (float). Para cada tipo de publicidade, temos os valores investidos; já na coluna Sales, temos o valor em venda gerado pelas publicidades.

sns.histplot(data=MKT, x="youtube", color="red", element="poly")
sns.histplot(data=MKT, x="newspaper", color="gray", element="poly")
sns.histplot(data=MKT, x="facebook", color="blue", element="poly")
sns.histplot(data=MKT, x="sales", color="green", element="poly")
plt.ylabel("Ocorrências")
plt.xlabel("Valor Investido")
plt.title("Variação de Investimento vs. Vendas")

sns.barplot(data=MKT_total, x='Tipo', y='Total');
plt.title("Valor Total de Investimento vs. Vendas");

# **ETAPA 2 **- Os gráficos e a descrição dos dados indicam que os custos do Youtube estão fora da realidade, pois estão muito acima da receita apresentada, o que leva a crer que o nome das colunas foram trocados em algum momento. Sendo assim, trataremos os dados na sequência.

MKT = MKT.rename(columns={'youtube': 'sales', 'facebook': 'youtube', 'newspaper': 'facebook', 'sales': 'newspaper'})
MKT.head()

MKT_alt = MKT
MKT_alt['investimento'] = MKT_alt['youtube'] + MKT_alt['facebook'] + MKT_alt['newspaper']
MKT_alt.head()

MKT_alt['ROI'] = round((MKT_alt['sales'] - MKT_alt['investimento']) / MKT_alt['investimento'], 2)
MKT_alt.head()

MKT_total = pd.DataFrame({'Tipo': MKT_alt.columns, 'Total': MKT_alt.sum()})
MKT_total.drop(['ROI'], axis=0, inplace=True)
MKT_total.reset_index(inplace=True)
MKT_total = MKT_total[['Tipo', 'Total']]
MKT_total

# Gráfico de linha por tipo de investimento:
multi = MKT_alt[['youtube', 'facebook', 'newspaper']]
plt.figure(figsize=(12,8))
plt.style.use('seaborn-v0_8-darkgrid')
palette = plt.get_cmap('Set1')
num = 0
for col in multi:
  num += 1
  plt.subplot(3, 1, num)
  for v in multi:
    plt.plot(multi.index, multi[v], marker='', color='grey', linewidth=0.6, alpha=0.4)
  plt.plot(multi.index, multi[col], marker='', color=palette(num), linewidth=1.6, alpha=0.9, label=col)
  plt.title(col, loc='center', fontsize=8, fontweight=0, color=palette(num))
plt.show();

MKT_alt.corr()

sns.pairplot(MKT_alt, x_vars=['youtube', 'facebook', 'newspaper', 'investimento'], y_vars=['sales', 'ROI']);

sns.heatmap(MKT_alt.corr())

Analisando os mapa de calor, podemos concluir que o investimento em mídias digitais não causa impacto relevante nas vendas; diferente da relação dos jornais com as vendas.

# **ETAPA 3 ** - Modelagem em regressão simples

X = MKT_alt[['youtube', 'facebook', 'newspaper']]
Y = MKT_alt['sales']

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, train_size=0.8, random_state=22)

regL = LinearRegression()
regL.fit(X_train, Y_train)

model_teste = regL.predict(X_test)

acuracia = r2_score(Y_test, model_teste)
print(f'A acurácia deste modelo é de {round(acuracia*100)}%.')
